/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.*;
import org.json.JSONObject;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        checkWeatherButton = new javax.swing.JButton();
        favoriteCitiesComboBox = new javax.swing.JComboBox<>();
        weatherLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        weatherTable = new javax.swing.JTable();
        saveToFileButton = new javax.swing.JButton();
        saveToFavoritesButton = new javax.swing.JButton();
        loadFromFileButton = new javax.swing.JButton();
        iconLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        jLabel1.setText("APLIKASI CEK CUACA SEDERHANA");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tampilan Cuaca :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Kota Favorit :");

        checkWeatherButton.setText("Pengecekkan Cuaca");
        checkWeatherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkWeatherButtonActionPerformed(evt);
            }
        });

        weatherLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        weatherLabel.setText("Cuaca :");

        weatherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(weatherTable);

        saveToFileButton.setText("Simpan Data");
        saveToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileButtonActionPerformed(evt);
            }
        });

        saveToFavoritesButton.setText("Tambah ke Favorit");

        loadFromFileButton.setText("Muat Data");

        iconLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        iconLabel.setText(": Gambar Cuaca");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(iconLabel)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkWeatherButton)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cityTextField)
                                            .addComponent(favoriteCitiesComboBox, 0, 198, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveToFavoritesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(saveToFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(loadFromFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jLabel1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(weatherLabel)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(favoriteCitiesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkWeatherButton)
                    .addComponent(saveToFavoritesButton))
                .addGap(31, 31, 31)
                .addComponent(iconLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(weatherLabel)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveToFileButton)
                    .addComponent(loadFromFileButton))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkWeatherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkWeatherButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkWeatherButtonActionPerformed

    private void saveToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveToFileButtonActionPerformed
private boolean isInComboBox(String city) {
        for (int i = 0; i < favoriteCitiesComboBox.getItemCount(); i++) {
            if (favoriteCitiesComboBox.getItemAt(i).equals(city)) {
                return true;
            }
        }
        return false;
    }

    private void getWeatherData(String city) {
        try {
            String apiKey = "8de014e80cf79a98f089b0b12c4370bd" ;
            String urlString = "http://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + apiKey + "&units=metric";
            URL url = new URL(urlString);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");

            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuilder response = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                response.append(line);
            }
            reader.close();

            JSONObject json = new JSONObject(response.toString());
            String condition = json.getJSONArray("weather").getJSONObject(0).getString("main");
            double temperature = json.getJSONObject("main").getDouble("temp");
            String iconCode = json.getJSONArray("weather").getJSONObject(0).getString("icon");

            weatherLabel.setText("City: " + city + ", Temp: " + temperature + "°C, Condition: " + condition);
            DefaultTableModel tableModel = (DefaultTableModel) weatherTable.getModel();
            tableModel.addRow(new Object[]{city, temperature, condition});
            updateWeatherIcon(iconCode);

        } catch (Exception ex) {
            ex.printStackTrace();
            weatherLabel.setText("Could not retrieve data");
        }
    }

    private void updateWeatherIcon(String iconCode) {
        String iconUrl = "https://openweathermap.org/img/wn/" + iconCode + "@2x.png";
        try {
            iconLabel.setIcon(new ImageIcon(new URL(iconUrl)));
        } catch (Exception e) {
            e.printStackTrace();
            iconLabel.setIcon(null); // Jika gagal, kosongkan ikon
        }
    }

    private void saveFavoritesToFile() {
        String favoritesFile = "favorites.txt";
        try (PrintWriter writer = new PrintWriter(new File(favoritesFile))) {
            for (int i = 0; i < favoriteCitiesComboBox.getItemCount(); i++) {
                writer.println(favoriteCitiesComboBox.getItemAt(i));
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    private void loadFavoritesFromFile() {
        String favoritesFile = "favorites.txt";
        try (BufferedReader reader = new BufferedReader(new FileReader(favoritesFile))) {
            String city;
            while ((city = reader.readLine()) != null) {
                favoriteCitiesComboBox.addItem(city);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void saveDataToFile() {
        String dataFile = "weather_data.csv";
        try (PrintWriter writer = new PrintWriter(new File(dataFile))) {
            writer.println("City,Temperature,Condition");
            DefaultTableModel tableModel = (DefaultTableModel) weatherTable.getModel();
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                writer.println(tableModel.getValueAt(i, 0) + "," +
                               tableModel.getValueAt(i, 1) + "," +
                               tableModel.getValueAt(i, 2));
            }
            JOptionPane.showMessageDialog(this, "Data saved to " + dataFile);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    private void loadDataFromFile() {
        DefaultTableModel tableModel = (DefaultTableModel) weatherTable.getModel();
        tableModel.setRowCount(0); // Bersihkan tabel terlebih dahulu
        String dataFile = "weather_data.csv";
        try (BufferedReader reader = new BufferedReader(new FileReader(dataFile))) {
            String line;
            reader.readLine(); // Lewati header
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                tableModel.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private void start() {
 // Inisialisasi JTable
        String[] columnNames = {"City", "Temperature", "Condition"};
        DefaultTableModel tableModel = (DefaultTableModel) weatherTable.getModel();
        tableModel = new DefaultTableModel(columnNames, 0);
        weatherTable.setModel(tableModel);

        // Tambahkan ActionListener
        checkWeatherButton.addActionListener(e -> {
            String textField = cityTextField.getText();
String comboBox = (String) favoriteCitiesComboBox. getSelectedItem();
String city;
                if (textField.isEmpty()) { 
                    if (!comboBox.isEmpty()) {
                        city = comboBox; 
                    } else {
                        city = "null";
                    }
                } else {
                    city = textField;
                }
                if (city.equals("null")) {  JOptionPane.showMessageDialog(null, "Kota harus terisi!");
                } else {
            getWeatherData(city);
                }
        });

        saveToFavoritesButton.addActionListener(e -> {
            String city = cityTextField.getText();
            if (!city.isEmpty() && !isInComboBox(city)) {
                favoriteCitiesComboBox.addItem(city);
                saveFavoritesToFile();
            }
        });

        saveToFileButton.addActionListener(e -> saveDataToFile());
        loadFromFileButton.addActionListener(e -> loadDataFromFile());

        favoriteCitiesComboBox.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                String selectedCity = (String) favoriteCitiesComboBox.getSelectedItem();
                getWeatherData(selectedCity);
            }
        });

        loadFavoritesFromFile(); // Muat daftar favorit saat form dimulai
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkWeatherButton;
    private javax.swing.JTextField cityTextField;
    private javax.swing.JComboBox<String> favoriteCitiesComboBox;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadFromFileButton;
    private javax.swing.JButton saveToFavoritesButton;
    private javax.swing.JButton saveToFileButton;
    private javax.swing.JLabel weatherLabel;
    private javax.swing.JTable weatherTable;
    // End of variables declaration//GEN-END:variables
}
